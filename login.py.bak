import streamlit as st
import hashlib
import json
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import streamlit.components.v1 as components

SCOPE = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/drive"
]

def connect_google_sheet():
    try:
        creds_json = st.secrets["google"]["creds"]
        creds_dict = json.loads(creds_json)
        creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, SCOPE)
        client = gspread.authorize(creds)
        return client.open("User").worksheet("Sheet1")
    except:
        return None

def hash_password(password):
    return hashlib.sha256(password.encode()).hexdigest()

def get_all_users(sheet):
    try:
        return sheet.get_all_records()
    except:
        return []

def verify_user(sheet, username, password):
    hashed = hash_password(password)
    users = get_all_users(sheet)
    return next((u for u in users if u.get("username")==username and u.get("password")==hashed), None)

def app():
    sheet = connect_google_sheet()
    st.session_state.setdefault("logged_in", False)
    st.session_state.setdefault("user", None)

    # --- hidden token input ---
    components.html('<input type="hidden" id="login_token"/> <script>const t=localStorage.getItem("login_token"); if(t){document.getElementById("login_token").value=t;}</script>', height=0)
    token = st.text_input("", value="", key="login_token_field", type="password", label_visibility="collapsed")

    if token and not st.session_state.logged_in:
        users = get_all_users(sheet)
        user = next((u for u in users if u["username"]==token), None)
        if user:
            st.session_state.logged_in = True
            st.session_state.user = user
            st.success(f"‚úÖ Welcome back {user['username']}!")

    if not st.session_state.logged_in:
        st.title("üîê Login")
        username = st.text_input("Username")
        password = st.text_input("Password", type="password")
        if st.button("Login"):
            user = verify_user(sheet, username, password)
            if user:
                st.session_state.logged_in = True
                st.session_state.user = user
                # Save token to localStorage
                components.html(f'<script>localStorage.setItem("login_token","{username}");</script>', height=0)
                st.success(f"‚úÖ Logged in as {username}!")
                st.rerun()
            else:
                st.error("‚ùå Invalid username or password.")

    if st.session_state.logged_in and st.button("Logout"):
        st.session_state.logged_in = False
        st.session_state.user = None
        components.html('<script>localStorage.removeItem("login_token");</script>', height=0)
        st.success("‚úÖ Logged out!")
        st.experimental_rerun()